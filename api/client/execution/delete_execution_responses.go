// Code generated by go-swagger; DO NOT EDIT.

package execution

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/testra-tech/testra-cli/api/models"
)

// DeleteExecutionReader is a Reader for the DeleteExecution structure.
type DeleteExecutionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteExecutionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteExecutionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewDeleteExecutionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewDeleteExecutionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteExecutionOK creates a DeleteExecutionOK with default headers values
func NewDeleteExecutionOK() *DeleteExecutionOK {
	return &DeleteExecutionOK{}
}

/*DeleteExecutionOK handles this case with default header values.

Successful deletion of given Execution
*/
type DeleteExecutionOK struct {
	Payload *models.Execution
}

func (o *DeleteExecutionOK) Error() string {
	return fmt.Sprintf("[DELETE /projects/{projectId}/executions/{id}][%d] deleteExecutionOK  %+v", 200, o.Payload)
}

func (o *DeleteExecutionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Execution)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteExecutionNotFound creates a DeleteExecutionNotFound with default headers values
func NewDeleteExecutionNotFound() *DeleteExecutionNotFound {
	return &DeleteExecutionNotFound{}
}

/*DeleteExecutionNotFound handles this case with default header values.

Execution not found
*/
type DeleteExecutionNotFound struct {
	Payload *models.ErrorResponse
}

func (o *DeleteExecutionNotFound) Error() string {
	return fmt.Sprintf("[DELETE /projects/{projectId}/executions/{id}][%d] deleteExecutionNotFound  %+v", 404, o.Payload)
}

func (o *DeleteExecutionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteExecutionDefault creates a DeleteExecutionDefault with default headers values
func NewDeleteExecutionDefault(code int) *DeleteExecutionDefault {
	return &DeleteExecutionDefault{
		_statusCode: code,
	}
}

/*DeleteExecutionDefault handles this case with default header values.

Any other errors
*/
type DeleteExecutionDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the delete execution default response
func (o *DeleteExecutionDefault) Code() int {
	return o._statusCode
}

func (o *DeleteExecutionDefault) Error() string {
	return fmt.Sprintf("[DELETE /projects/{projectId}/executions/{id}][%d] deleteExecution default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteExecutionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
