// Code generated by go-swagger; DO NOT EDIT.

package execution

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/testra/testra-cli/api/models"
)

// GetExecutionResultStatsReader is a Reader for the GetExecutionResultStats structure.
type GetExecutionResultStatsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetExecutionResultStatsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetExecutionResultStatsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetExecutionResultStatsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetExecutionResultStatsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetExecutionResultStatsOK creates a GetExecutionResultStatsOK with default headers values
func NewGetExecutionResultStatsOK() *GetExecutionResultStatsOK {
	return &GetExecutionResultStatsOK{}
}

/*GetExecutionResultStatsOK handles this case with default header values.

Successful response of given Execution
*/
type GetExecutionResultStatsOK struct {
	Payload *models.TestExecutionStats
}

func (o *GetExecutionResultStatsOK) Error() string {
	return fmt.Sprintf("[GET /projects/{projectId}/executions/{id}/result-stats][%d] getExecutionResultStatsOK  %+v", 200, o.Payload)
}

func (o *GetExecutionResultStatsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TestExecutionStats)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExecutionResultStatsNotFound creates a GetExecutionResultStatsNotFound with default headers values
func NewGetExecutionResultStatsNotFound() *GetExecutionResultStatsNotFound {
	return &GetExecutionResultStatsNotFound{}
}

/*GetExecutionResultStatsNotFound handles this case with default header values.

Execution not found
*/
type GetExecutionResultStatsNotFound struct {
	Payload *models.ErrorResponse
}

func (o *GetExecutionResultStatsNotFound) Error() string {
	return fmt.Sprintf("[GET /projects/{projectId}/executions/{id}/result-stats][%d] getExecutionResultStatsNotFound  %+v", 404, o.Payload)
}

func (o *GetExecutionResultStatsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExecutionResultStatsDefault creates a GetExecutionResultStatsDefault with default headers values
func NewGetExecutionResultStatsDefault(code int) *GetExecutionResultStatsDefault {
	return &GetExecutionResultStatsDefault{
		_statusCode: code,
	}
}

/*GetExecutionResultStatsDefault handles this case with default header values.

Any other errors
*/
type GetExecutionResultStatsDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the get execution result stats default response
func (o *GetExecutionResultStatsDefault) Code() int {
	return o._statusCode
}

func (o *GetExecutionResultStatsDefault) Error() string {
	return fmt.Sprintf("[GET /projects/{projectId}/executions/{id}/result-stats][%d] getExecutionResultStats default  %+v", o._statusCode, o.Payload)
}

func (o *GetExecutionResultStatsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
