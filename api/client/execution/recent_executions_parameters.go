// Code generated by go-swagger; DO NOT EDIT.

package execution

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewRecentExecutionsParams creates a new RecentExecutionsParams object
// with the default values initialized.
func NewRecentExecutionsParams() *RecentExecutionsParams {
	var ()
	return &RecentExecutionsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewRecentExecutionsParamsWithTimeout creates a new RecentExecutionsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewRecentExecutionsParamsWithTimeout(timeout time.Duration) *RecentExecutionsParams {
	var ()
	return &RecentExecutionsParams{

		timeout: timeout,
	}
}

// NewRecentExecutionsParamsWithContext creates a new RecentExecutionsParams object
// with the default values initialized, and the ability to set a context for a request
func NewRecentExecutionsParamsWithContext(ctx context.Context) *RecentExecutionsParams {
	var ()
	return &RecentExecutionsParams{

		Context: ctx,
	}
}

// NewRecentExecutionsParamsWithHTTPClient creates a new RecentExecutionsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewRecentExecutionsParamsWithHTTPClient(client *http.Client) *RecentExecutionsParams {
	var ()
	return &RecentExecutionsParams{
		HTTPClient: client,
	}
}

/*RecentExecutionsParams contains all the parameters to send to the API endpoint
for the recent executions operation typically these are written to a http.Request
*/
type RecentExecutionsParams struct {

	/*Size
	  No of executions to return

	*/
	Size int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the recent executions params
func (o *RecentExecutionsParams) WithTimeout(timeout time.Duration) *RecentExecutionsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the recent executions params
func (o *RecentExecutionsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the recent executions params
func (o *RecentExecutionsParams) WithContext(ctx context.Context) *RecentExecutionsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the recent executions params
func (o *RecentExecutionsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the recent executions params
func (o *RecentExecutionsParams) WithHTTPClient(client *http.Client) *RecentExecutionsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the recent executions params
func (o *RecentExecutionsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSize adds the size to the recent executions params
func (o *RecentExecutionsParams) WithSize(size int64) *RecentExecutionsParams {
	o.SetSize(size)
	return o
}

// SetSize adds the size to the recent executions params
func (o *RecentExecutionsParams) SetSize(size int64) {
	o.Size = size
}

// WriteToRequest writes these params to a swagger request
func (o *RecentExecutionsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param size
	qrSize := o.Size
	qSize := swag.FormatInt64(qrSize)
	if qSize != "" {
		if err := r.SetQueryParam("size", qSize); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
