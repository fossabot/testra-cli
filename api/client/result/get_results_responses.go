// Code generated by go-swagger; DO NOT EDIT.

package result

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/testra-tech/testra-cli/api/models"
)

// GetResultsReader is a Reader for the GetResults structure.
type GetResultsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetResultsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetResultsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetResultsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetResultsOK creates a GetResultsOK with default headers values
func NewGetResultsOK() *GetResultsOK {
	return &GetResultsOK{}
}

/*GetResultsOK handles this case with default header values.

Successful Response
*/
type GetResultsOK struct {
	Payload []*models.EnrichedTestResult
}

func (o *GetResultsOK) Error() string {
	return fmt.Sprintf("[GET /projects/{projectId}/executions/{executionId}/results][%d] getResultsOK  %+v", 200, o.Payload)
}

func (o *GetResultsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResultsDefault creates a GetResultsDefault with default headers values
func NewGetResultsDefault(code int) *GetResultsDefault {
	return &GetResultsDefault{
		_statusCode: code,
	}
}

/*GetResultsDefault handles this case with default header values.

Any other errors
*/
type GetResultsDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the get results default response
func (o *GetResultsDefault) Code() int {
	return o._statusCode
}

func (o *GetResultsDefault) Error() string {
	return fmt.Sprintf("[GET /projects/{projectId}/executions/{executionId}/results][%d] getResults default  %+v", o._statusCode, o.Payload)
}

func (o *GetResultsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
