// Code generated by go-swagger; DO NOT EDIT.

package result

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/testra/testra-cli/api/models"
)

// NewUpdateResultParams creates a new UpdateResultParams object
// with the default values initialized.
func NewUpdateResultParams() *UpdateResultParams {
	var ()
	return &UpdateResultParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateResultParamsWithTimeout creates a new UpdateResultParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateResultParamsWithTimeout(timeout time.Duration) *UpdateResultParams {
	var ()
	return &UpdateResultParams{

		timeout: timeout,
	}
}

// NewUpdateResultParamsWithContext creates a new UpdateResultParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateResultParamsWithContext(ctx context.Context) *UpdateResultParams {
	var ()
	return &UpdateResultParams{

		Context: ctx,
	}
}

// NewUpdateResultParamsWithHTTPClient creates a new UpdateResultParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateResultParamsWithHTTPClient(client *http.Client) *UpdateResultParams {
	var ()
	return &UpdateResultParams{
		HTTPClient: client,
	}
}

/*UpdateResultParams contains all the parameters to send to the API endpoint
for the update result operation typically these are written to a http.Request
*/
type UpdateResultParams struct {

	/*Body*/
	Body *models.TestResultRequest
	/*ExecutionID
	  Execution Id

	*/
	ExecutionID string
	/*ID
	  Result Id

	*/
	ID string
	/*ProjectID
	  Project Id

	*/
	ProjectID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update result params
func (o *UpdateResultParams) WithTimeout(timeout time.Duration) *UpdateResultParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update result params
func (o *UpdateResultParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update result params
func (o *UpdateResultParams) WithContext(ctx context.Context) *UpdateResultParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update result params
func (o *UpdateResultParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update result params
func (o *UpdateResultParams) WithHTTPClient(client *http.Client) *UpdateResultParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update result params
func (o *UpdateResultParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the update result params
func (o *UpdateResultParams) WithBody(body *models.TestResultRequest) *UpdateResultParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the update result params
func (o *UpdateResultParams) SetBody(body *models.TestResultRequest) {
	o.Body = body
}

// WithExecutionID adds the executionID to the update result params
func (o *UpdateResultParams) WithExecutionID(executionID string) *UpdateResultParams {
	o.SetExecutionID(executionID)
	return o
}

// SetExecutionID adds the executionId to the update result params
func (o *UpdateResultParams) SetExecutionID(executionID string) {
	o.ExecutionID = executionID
}

// WithID adds the id to the update result params
func (o *UpdateResultParams) WithID(id string) *UpdateResultParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the update result params
func (o *UpdateResultParams) SetID(id string) {
	o.ID = id
}

// WithProjectID adds the projectID to the update result params
func (o *UpdateResultParams) WithProjectID(projectID string) *UpdateResultParams {
	o.SetProjectID(projectID)
	return o
}

// SetProjectID adds the projectId to the update result params
func (o *UpdateResultParams) SetProjectID(projectID string) {
	o.ProjectID = projectID
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateResultParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param executionId
	if err := r.SetPathParam("executionId", o.ExecutionID); err != nil {
		return err
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	// path param projectId
	if err := r.SetPathParam("projectId", o.ProjectID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
