// Code generated by go-swagger; DO NOT EDIT.

package scenario

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/testra-tech/testra-cli/api/models"
)

// GetScenariosReader is a Reader for the GetScenarios structure.
type GetScenariosReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetScenariosReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetScenariosOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetScenariosNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetScenariosDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetScenariosOK creates a GetScenariosOK with default headers values
func NewGetScenariosOK() *GetScenariosOK {
	return &GetScenariosOK{}
}

/*GetScenariosOK handles this case with default header values.

Successful Response
*/
type GetScenariosOK struct {
	Payload []*models.Scenario
}

func (o *GetScenariosOK) Error() string {
	return fmt.Sprintf("[GET /projects/{projectId}/scenarios][%d] getScenariosOK  %+v", 200, o.Payload)
}

func (o *GetScenariosOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScenariosNotFound creates a GetScenariosNotFound with default headers values
func NewGetScenariosNotFound() *GetScenariosNotFound {
	return &GetScenariosNotFound{}
}

/*GetScenariosNotFound handles this case with default header values.

Project not found
*/
type GetScenariosNotFound struct {
	Payload *models.ErrorResponse
}

func (o *GetScenariosNotFound) Error() string {
	return fmt.Sprintf("[GET /projects/{projectId}/scenarios][%d] getScenariosNotFound  %+v", 404, o.Payload)
}

func (o *GetScenariosNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScenariosDefault creates a GetScenariosDefault with default headers values
func NewGetScenariosDefault(code int) *GetScenariosDefault {
	return &GetScenariosDefault{
		_statusCode: code,
	}
}

/*GetScenariosDefault handles this case with default header values.

Any other errors
*/
type GetScenariosDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the get scenarios default response
func (o *GetScenariosDefault) Code() int {
	return o._statusCode
}

func (o *GetScenariosDefault) Error() string {
	return fmt.Sprintf("[GET /projects/{projectId}/scenarios][%d] getScenarios default  %+v", o._statusCode, o.Payload)
}

func (o *GetScenariosDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
