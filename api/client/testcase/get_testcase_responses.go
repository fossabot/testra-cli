// Code generated by go-swagger; DO NOT EDIT.

package testcase

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/testra-tech/testra-cli/api/models"
)

// GetTestcaseReader is a Reader for the GetTestcase structure.
type GetTestcaseReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTestcaseReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetTestcaseOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetTestcaseNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetTestcaseDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetTestcaseOK creates a GetTestcaseOK with default headers values
func NewGetTestcaseOK() *GetTestcaseOK {
	return &GetTestcaseOK{}
}

/*GetTestcaseOK handles this case with default header values.

Successful response
*/
type GetTestcaseOK struct {
	Payload *models.Testcase
}

func (o *GetTestcaseOK) Error() string {
	return fmt.Sprintf("[GET /projects/{projectId}/testcases/{id}][%d] getTestcaseOK  %+v", 200, o.Payload)
}

func (o *GetTestcaseOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Testcase)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTestcaseNotFound creates a GetTestcaseNotFound with default headers values
func NewGetTestcaseNotFound() *GetTestcaseNotFound {
	return &GetTestcaseNotFound{}
}

/*GetTestcaseNotFound handles this case with default header values.

Testcase not found
*/
type GetTestcaseNotFound struct {
	Payload *models.ErrorResponse
}

func (o *GetTestcaseNotFound) Error() string {
	return fmt.Sprintf("[GET /projects/{projectId}/testcases/{id}][%d] getTestcaseNotFound  %+v", 404, o.Payload)
}

func (o *GetTestcaseNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTestcaseDefault creates a GetTestcaseDefault with default headers values
func NewGetTestcaseDefault(code int) *GetTestcaseDefault {
	return &GetTestcaseDefault{
		_statusCode: code,
	}
}

/*GetTestcaseDefault handles this case with default header values.

Any other errors
*/
type GetTestcaseDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the get testcase default response
func (o *GetTestcaseDefault) Code() int {
	return o._statusCode
}

func (o *GetTestcaseDefault) Error() string {
	return fmt.Sprintf("[GET /projects/{projectId}/testcases/{id}][%d] getTestcase default  %+v", o._statusCode, o.Payload)
}

func (o *GetTestcaseDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
