// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// SimulationScenario SimulationScenario
// swagger:model SimulationScenario
type SimulationScenario struct {

	// average
	Average float64 `json:"average,omitempty"`

	// avg request per sec
	AvgRequestPerSec int64 `json:"avgRequestPerSec,omitempty"`

	// count
	Count int64 `json:"count,omitempty"`

	// duration in ms
	DurationInMs int64 `json:"durationInMs,omitempty"`

	// end time
	EndTime int64 `json:"endTime,omitempty"`

	// error count
	ErrorCount int64 `json:"errorCount,omitempty"`

	// max
	Max float64 `json:"max,omitempty"`

	// min
	Min float64 `json:"min,omitempty"`

	// percentiles
	Percentiles []*Percentile `json:"percentiles"`

	// request
	Request string `json:"request,omitempty"`

	// start time
	StartTime int64 `json:"startTime,omitempty"`

	// std div
	StdDiv float64 `json:"stdDiv,omitempty"`

	// success count
	SuccessCount int64 `json:"successCount,omitempty"`
}

// Validate validates this simulation scenario
func (m *SimulationScenario) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePercentiles(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SimulationScenario) validatePercentiles(formats strfmt.Registry) error {

	if swag.IsZero(m.Percentiles) { // not required
		return nil
	}

	for i := 0; i < len(m.Percentiles); i++ {
		if swag.IsZero(m.Percentiles[i]) { // not required
			continue
		}

		if m.Percentiles[i] != nil {
			if err := m.Percentiles[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("percentiles" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *SimulationScenario) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SimulationScenario) UnmarshalBinary(b []byte) error {
	var res SimulationScenario
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
